---
# The loggregator role contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - route_registrar: Used for registering routes
#
# Also: loggregator_trafficcontroller, metron_agent
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "loggregator"
  labels:
    skiff-role-name: "loggregator"
spec:
  replicas: 1
  selector:
    matchLabels:
      skiff-role-name: "loggregator"
  template:
    metadata:
      annotations: {}
      labels:
        skiff-role-name: "loggregator"
      name: "loggregator"
    spec:
      containers:
      - env:
        - name: "DOMAIN"
          value: "cf-dev.io"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "INTERNAL_CA_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-key"
              name: "secrets"
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"
        - name: "KUBE_SIZING_NATS_COUNT"
          value: "1"
        - name: "METRON_CERT"
          valueFrom:
            secretKeyRef:
              key: "metron-cert"
              name: "secrets"
        - name: "METRON_KEY"
          valueFrom:
            secretKeyRef:
              key: "metron-key"
              name: "secrets"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "NATS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "nats-password"
              name: "secrets"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "TRAFFICCONTROLLER_CERT"
          valueFrom:
            secretKeyRef:
              key: "trafficcontroller-cert"
              name: "secrets"
        - name: "TRAFFICCONTROLLER_KEY"
          valueFrom:
            secretKeyRef:
              key: "trafficcontroller-key"
              name: "secrets"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"
        - name: "UAA_CLIENTS_DOPPLER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-doppler-secret"
              name: "secrets"
        - name: "UAA_HOST"
          value: "uaa.cf-dev.io"
        - name: "UAA_PORT"
          value: "2793"
        image: "splatform/scf-loggregator:fe9d0e5459cbf16589db53bc432b78e657cfae07"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "loggregator"
        ports:
        - containerPort: 8081
          name: "dropsonde"
          protocol: "TCP"
        - containerPort: 8082
          name: "grpc"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 0
          httpGet:
            path: "/set-cookie"
            port: 8081
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 0
          successThreshold: 0
          timeoutSeconds: 0
        resources:
          requests:
            memory: "153Mi"
            cpu: "2000m"
          limits: {}
        securityContext: ~
        volumeMounts: ~
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 600
      volumes: ~
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "loggregator"
  spec:
    ports:
    - name: "dropsonde"
      port: 8081
      protocol: "TCP"
      targetPort: "dropsonde"
    - name: "grpc"
      port: 8082
      protocol: "TCP"
      targetPort: "grpc"
    selector:
      skiff-role-name: "loggregator"
    type: "ClusterIP"
kind: "List"
